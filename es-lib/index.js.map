{
  "version": 3,
  "sources": ["../lib/index.ts", "../lib/getConfig.ts", "../lib/bike.ts", "../lib/getExternals.ts", "../lib/spawn.ts", "../lib/copyPackage.ts", "../lib/worker.ts", "../lib/keyboard.ts", "../lib/devServe.ts", "../lib/baseConfig.ts", "../lib/watch.ts", "../lib/test.ts"],
  "sourcesContent": ["/* c8 ignore start */\nimport sourceMapSupport from \"source-map-support\";\nimport { getConfig, Conf } from \"./getConfig\";\nimport { bike } from \"./bike\";\nimport { test } from \"./test\";\n\nsourceMapSupport.install();\n\nexport type { Conf };\nexport { getConfig, bike, test };\n", "/* c8 ignore start */\nimport yargs from \"yargs\";\nimport { hideBin } from \"yargs/helpers\";\n\nexport function getConfig(argv: string[]) {\n  const confObj = yargs(hideBin(argv))\n    .option(\"argv\", {\n      type: \"array\",\n      description: \"Backup all argv\",\n    })\n    .option(\"log-config\", {\n      type: \"boolean\",\n      default: false,\n      description: \"Log cli config at run\",\n    })\n    .option(\"browser\", {\n      type: \"boolean\",\n      description: \"Use build browser types\",\n    })\n    .option(\"html\", {\n      alias: \"h\",\n      type: \"string\",\n      description: \"Use base html When type is browser\",\n    })\n    .option(\"html-out\", {\n      type: \"string\",\n      description: \"Build client out dir, server default dist/client\",\n    })\n    .option(\"out\", {\n      type: \"string\",\n      description:\n        \"Build out dir, server default dist/server, test default dist/test\",\n    })\n    .option(\"outfile\", {\n      type: \"string\",\n      default: \"index.js\",\n      description: \"Build out dir index name\",\n    })\n    .option(\"static\", {\n      type: \"string\",\n      default: \"static\",\n      description: \"Auto copy static's files to out\",\n    })\n    .option(\"public\", {\n      type: \"string\",\n      default: \"public\",\n      description: \"Auto copy public's files to html-out\",\n    })\n    .option(\"entry\", {\n      type: \"string\",\n      description: \"Main typescript file, default: ${source}/index.ts\",\n    })\n    .option(\"spawn\", {\n      type: \"boolean\",\n      default: false,\n      description: \"Use child_process.spawn replace cluster.fork\",\n    })\n    .option(\"copy\", {\n      type: \"array\",\n      description: \"Copy other file to dist\",\n    })\n    .option(\"minify\", {\n      alias: \"m\",\n      type: \"boolean\",\n      description: \"Esbuild minify\",\n    })\n    .option(\"bundle\", {\n      type: \"boolean\",\n      default: true,\n      description: \"Esbuild bundle\",\n    })\n    .option(\"depend\", {\n      type: \"boolean\",\n      description: \"Esbuild bundle dependencies\",\n    })\n    .option(\"external\", {\n      alias: \"e\",\n      type: \"array\",\n      description: \"Esbuild external\",\n    })\n    .option(\"define\", {\n      type: \"string\",\n      description: \"Esbuild define\",\n    })\n    .option(\"target\", {\n      type: \"string\",\n      default: \"es6\",\n      description:\n        \"Esbuild target, browser default: es6, nodejs default: esnext\",\n    })\n    .option(\"splitting\", {\n      type: \"boolean\",\n      description: \"Esbuild splitting\",\n    })\n    .option(\"format\", {\n      type: \"string\",\n      description: \"Esbuild format\",\n    })\n    .option(\"sourcemap\", {\n      type: \"boolean\",\n      description: \"Esbuild use sourcemap\",\n    })\n    .option(\"test\", {\n      alias: \"t\",\n      type: \"boolean\",\n      default: false,\n      description: \"Is use test\",\n    })\n    .option(\"all\", {\n      type: \"boolean\",\n      default: false,\n      description: \"Always test all case, ignore .bike.test.yaml\",\n    })\n    .option(\"focus\", {\n      alias: \"f\",\n      type: \"string\",\n      description: \"Use RegExp focus some test\",\n    })\n    .option(\"start\", {\n      type: \"boolean\",\n      default: false,\n      description: \"Start server after on build\",\n    })\n    .option(\"platform\", {\n      type: \"string\",\n      default: \"node\",\n      description: \"Esbuild platform\",\n    })\n    .option(\"watch\", {\n      alias: \"w\",\n      type: \"boolean\",\n      default: false,\n      description: \"Watch dir on change reload\",\n    })\n    .option(\"clear\", {\n      type: \"boolean\",\n      default: true,\n      description: \"On reload auto clear\",\n    })\n    .option(\"gzip\", {\n      type: \"boolean\",\n      description: \"(only-browser) gzip watch is false, else is true\",\n    })\n    .option(\"host\", {\n      type: \"string\",\n      default: \"127.0.0.1\",\n      description: \"(only-browser) browser serve host\",\n    })\n    .option(\"port\", {\n      type: \"number\",\n      default: 13000,\n      description: \"(only-browser) browser serve port\",\n    })\n    .option(\"path-prefix\", {\n      type: \"string\",\n      default: \"/\",\n      description: \"(only-browser) public file path prefix\",\n    })\n    .option(\"url-prefix\", {\n      type: \"string\",\n      default: \"/\",\n      description: \"(only-browser) html file url prefix\",\n    })\n    .option(\"proxy\", {\n      type: \"array\",\n      description:\n        \"(only-browser) Example: '--proxy=/v1::http://127.0.0.1:5000' is proxy /v1 to http://127.0.0.1:5000/v1\",\n    })\n    .option(\"reporter\", {\n      alias: \"r\",\n      type: \"string\",\n      description: \"(only-test) c8 reporter, pick in :[text, html]\",\n    })\n    .option(\"test-include\", {\n      type: \"string\",\n      default: \"(.test|.spec|_test|_spec)\",\n      description: \"(only-test) test files include RegExp string\",\n    })\n    .option(\"rematch\", {\n      type: \"boolean\",\n      default: false,\n      description: \"(only-test) auto rematch all test files on watch\",\n    })\n    .option(\"c8-include\", {\n      alias: \"n\",\n      type: \"array\",\n      description: \"(only-test) c8 include all files\",\n    })\n    .option(\"c8-exclude\", {\n      alias: \"x\",\n      type: \"array\",\n      description: \"(only-test) c8 exclude all files\",\n    })\n    .option(\"c8-all\", {\n      type: \"boolean\",\n      default: true,\n      description: \"(only-test) c8 all files\",\n    })\n    .option(\"c8-config\", {\n      type: \"string\",\n      description: \"(only-test) c8 path to JSON configuration file\",\n    })\n    .option(\"c8-skip-full\", {\n      type: \"boolean\",\n      description: \"(only-test) c8 skip full in text that ignore in html\",\n    });\n\n  const conf = confObj.parseSync();\n  // \u6839\u636Econf\u53C2\u6570\uFF0C\u521D\u59CB\u5316\u4E00\u4E9B\u6761\u4EF6\u548C\u903B\u8F91\n  conf.argv = argv.slice(2);\n\n  return conf;\n}\n\nconst _conf = getConfig([]);\n\nexport type Conf = typeof _conf & {\n  source: string;\n  afterFork: Function;\n  after: Function;\n  before: Function;\n  \"html-source\": string;\n  \"html-entry\": string;\n  \"html-text\": string;\n};\n", "/* c8 ignore start */\nimport esbuild from \"esbuild\";\nimport { resolve } from \"path\";\nimport { getExternals } from \"./getExternals\";\nimport type { Conf } from \"./getConfig\";\nimport { spawn } from \"./spawn\";\nimport { copyPackage } from \"./copyPackage\";\nimport { workerFork, workerStart } from \"./worker\";\nimport { keyboard } from \"./keyboard\";\nimport { devServe, onBuilded, releaseBrowser } from \"./devServe\";\nimport fs from \"fs-extra\";\nimport { baseConfig } from \"./baseConfig\";\nimport { watch } from \"./watch\";\n\nconst cwd = process.cwd();\n\nexport async function bike(config: Partial<Conf>) {\n  const conf = baseConfig(config);\n\n  if (workerStart()) {\n    return;\n  }\n\n  if (conf.html) {\n    fs.removeSync(resolve(cwd, conf[\"html-out\"]!));\n    if (!fs.existsSync(resolve(cwd, conf[\"html-out\"]!))) {\n      fs.mkdirpSync(resolve(cwd, conf[\"html-out\"]!));\n    }\n    const publicPath = resolve(cwd, conf.public);\n    if (fs.existsSync(publicPath)) {\n      fs.copySync(publicPath, resolve(cwd, conf[\"html-out\"]!));\n    }\n    const htmlPath = resolve(cwd, conf[\"html-out\"]!, \"index.html\");\n    fs.writeFileSync(htmlPath, conf[\"html-text\"]);\n    if (conf.watch) {\n      devServe(conf);\n    }\n  }\n\n  if (conf.source) {\n    fs.removeSync(resolve(cwd, conf.out!));\n    if (!fs.existsSync(resolve(cwd, conf.out!))) {\n      fs.mkdirpSync(resolve(cwd, conf.out!));\n    }\n\n    if (!conf.browser) {\n      const copyFiles = new Set(\n        [\".env\", ...((conf.copy as string[]) || [])].filter(Boolean) as string[]\n      );\n      copyFiles.forEach((file) => {\n        const p = resolve(cwd, file);\n        if (fs.existsSync(p)) {\n          fs.copyFileSync(p, resolve(cwd, conf.out!, file));\n        }\n      });\n      const staticPath = resolve(cwd, conf.static);\n      if (fs.existsSync(staticPath)) {\n        fs.copySync(staticPath, resolve(cwd, conf.out!));\n      }\n      copyPackage(conf);\n    }\n  }\n\n  let external = undefined;\n  if (conf.bundle) {\n    if (conf.external) {\n      external = [...getExternals(conf), ...conf.external];\n    } else {\n      external = getExternals(conf);\n    }\n  }\n\n  let esbuildOptions: any;\n  let esbuildHTMLOptions: any;\n\n  if (conf.source) {\n    if (conf.browser) {\n      esbuildOptions = {\n        entryPoints: [resolve(cwd, conf[\"entry\"]!)],\n        bundle: true,\n        target: [\"es6\"],\n        // target: [\"chrome58\", \"firefox57\", \"safari11\", \"edge16\"],\n        minify: !conf.watch,\n        platform: \"neutral\",\n        splitting: conf.splitting,\n        format: conf.format || \"cjs\",\n        outdir: conf[\"out\"],\n        sourcemap: !conf.watch,\n      };\n    } else {\n      esbuildOptions = {\n        entryPoints: [resolve(cwd, conf.entry!)],\n        bundle: conf.bundle,\n        target: conf.target || [\"node16\", \"es6\"],\n        minify: conf.minify,\n        define: conf.define,\n        platform: conf.platform,\n        splitting: conf.splitting,\n        format: conf.format,\n        external,\n        outdir: conf.splitting ? conf.out : undefined,\n        outfile: conf.splitting ? undefined : conf.out + \"/\" + conf.outfile,\n        sourcemap: conf.sourcemap,\n      };\n    }\n  }\n\n  if (conf.html) {\n    esbuildHTMLOptions = {\n      entryPoints: [resolve(cwd, conf[\"html-entry\"]!)],\n      bundle: true,\n      target: [\"es6\"],\n      // target: [\"chrome58\", \"firefox57\", \"safari11\", \"edge16\"],\n      minify: !conf.watch,\n      platform: \"neutral\",\n      splitting: true,\n      format: conf.format || \"esm\",\n      outdir: conf[\"html-out\"],\n      sourcemap: !conf.watch,\n    };\n  }\n\n  const build = async () => {\n    // if ((conf.watch || conf.start) && conf.clear) {\n    //   console.clear();\n    // }\n    if (conf.test) {\n      console.clear();\n    }\n    if (conf.before) {\n      await Promise.resolve(conf.before(conf));\n    }\n    if (conf.source) {\n      await esbuild.build(esbuildOptions);\n    }\n\n    if (conf.after) {\n      conf.after(conf);\n    }\n\n    if (!conf.watch && !conf.start) {\n      console.log(\"release server done.\");\n    }\n  };\n\n  const buildHTML = async () => {\n    await esbuild.build(esbuildHTMLOptions);\n\n    if (!conf.watch && !conf.start) {\n      releaseBrowser(conf);\n      console.log(\"release html done.\");\n    }\n  };\n\n  const reload = () => {\n    if (conf.source) {\n      if (conf.spawn) {\n        return spawn(conf);\n      }\n      workerFork(conf);\n    }\n  };\n\n  const reloadHTML = () => {\n    if (conf.html) {\n      onBuilded(conf);\n    }\n  };\n\n  try {\n    if (conf.source) {\n      await build();\n    }\n    if (conf.html) {\n      await buildHTML();\n    }\n  } catch (err) {\n    throw err;\n  }\n\n  if (conf.start) {\n    reload();\n    reloadHTML();\n  } else if (conf.watch) {\n    reload();\n    reloadHTML();\n    const onWatch = async () => {\n      await build();\n      reload();\n    };\n    if (conf.source) {\n      conf.source.split(\",\").forEach((src) => {\n        watch(src, onWatch);\n      });\n    }\n\n    if (conf.html) {\n      watch(conf[\"html-source\"], async () => {\n        await buildHTML();\n        reloadHTML();\n      });\n    }\n    if (conf.test) {\n      keyboard(conf, onWatch);\n    }\n  }\n}\n", "/* c8 ignore start */\nimport fs from \"fs-extra\";\nimport { resolve } from \"path\";\nimport type { Conf } from \"./getConfig\";\n\nconst cwd = process.cwd();\n\nfunction getPkg() {\n  const pkgPath = resolve(cwd, \"package.json\");\n  if (fs.existsSync(pkgPath)) {\n    return require(pkgPath) || null;\n  }\n  return null;\n}\n\nfunction getKeys(obj: { [key: string]: string }) {\n  if (!obj) {\n    return [];\n  }\n  const keys: string[] = [];\n  Object.keys(obj).forEach((k) => {\n    const val = obj[k];\n    if (/(\\.).*(\\/)/.test(val)) {\n      return;\n    }\n    if (/(link\\:)/.test(val)) {\n      return;\n    }\n    keys.push(k);\n  });\n  return keys;\n}\n\nexport function getExternals(conf: Conf) {\n  let externals = [\n    // \"bike\",\n    \"assert\",\n    \"async_hooks\",\n    \"buffer\",\n    \"child_process\",\n    \"cluster\",\n    \"console\",\n    \"crypto\",\n    \"dgram\",\n    \"diagnostics_channel\",\n    \"dns\",\n    \"domain\",\n    \"events\",\n    \"fs\",\n    \"fs/*\",\n    \"http\",\n    \"http2\",\n    \"https\",\n    \"inspector\",\n    \"module\",\n    \"net\",\n    \"os\",\n    \"path\",\n    \"perf_hooks\",\n    \"process\",\n    \"punycode\",\n    \"querystring\",\n    \"readline\",\n    \"repl\",\n    \"stream\",\n    \"string_decoder\",\n    \"tls\",\n    \"util\",\n    \"trace_events\",\n    \"tty\",\n    \"url\",\n    \"v8\",\n    \"vm\",\n    \"wasi\",\n    \"stream\",\n    \"node:stream/*\",\n    \"node:stream/web\",\n    \"worker_threads\",\n    \"zlib\",\n  ];\n\n  const tsconfigPath = resolve(cwd, \"tsconfig.json\");\n  const selfPkg = require(resolve(__dirname, \"../package.json\"));\n  externals = [...externals, ...getKeys(selfPkg.dependencies)];\n  externals = [...externals, ...getKeys(selfPkg.devDependencies)];\n\n  const pkg = getPkg();\n\n  if (pkg) {\n    if (!conf.depend && pkg.dependencies) {\n      const depend = getKeys(pkg.dependencies);\n      // if (depend.indexOf(\"bike\") > -1) {\n      //   console.error(\n      //     \"Error: bike is in package.dependencies, Please move bike to package.devDependencies.\"\n      //   );\n      //   process.exit();\n      // }\n      externals = [...externals, ...depend];\n    }\n    if (pkg.devDependencies) {\n      externals = [...externals, ...getKeys(pkg.devDependencies)];\n    }\n  }\n  if (fs.existsSync(tsconfigPath)) {\n    const tsconfig = require(tsconfigPath);\n    if (tsconfig.exclude) {\n      externals = [...externals, ...tsconfig.exclude];\n    }\n  }\n  return Array.from(new Set(externals));\n}\n", "/* c8 ignore start */\nimport child_process from \"child_process\";\nimport path from \"path\";\nimport type { Conf } from \"./getConfig\";\n\nlet lastChild: any = null;\nconst cwd = process.cwd();\n\nexport function spawn(conf: Conf) {\n  if (lastChild) {\n    lastChild.kill(0);\n    lastChild = null;\n  }\n\n  let c8: any[] = [];\n\n  const defaultExtension = [\".js\", \".cjs\", \".mjs\", \".ts\", \".tsx\", \".jsx\"];\n  const testFileExtensions = defaultExtension\n    .map((extension) => extension.slice(1))\n    .join(\",\");\n\n  const _c8Include: string[] = [];\n  if (conf[\"c8-include\"]?.length) {\n    conf[\"c8-include\"].forEach((k) => {\n      _c8Include.push(k as string);\n    });\n  }\n\n  const c8Include: string[] = [];\n  _c8Include.forEach((k) => {\n    c8Include.push(\"--include\");\n    c8Include.push(k);\n  });\n\n  const _c8Exclude: string[] = [\n    \"coverage/**\",\n    \"packages/*/test{,s}/**\",\n    \"**/*.d.ts\",\n    \"test{,s}/**\",\n    `test{,-*}.{${testFileExtensions}}`,\n    `**/*{.,-}test.{${testFileExtensions}}`,\n    \"**/__tests__/**\",\n\n    /* Exclude common development tool configuration files */\n    \"**/{ava,babel,nyc}.config.{js,cjs,mjs}\",\n    \"**/jest.config.{js,cjs,mjs,ts}\",\n    \"**/{karma,rollup,webpack}.config.js\",\n    \"**/.{eslint,mocha}rc.{js,cjs}\",\n  ];\n  if (conf[\"c8-exclude\"]?.length) {\n    conf[\"c8-exclude\"].forEach((k) => {\n      _c8Exclude.push(k as string);\n    });\n  }\n  const c8Exclude: string[] = [];\n  _c8Exclude.forEach((k) => {\n    c8Exclude.push(\"--exclude\");\n    c8Exclude.push(k);\n  });\n\n  if (conf.reporter) {\n    c8 = [\n      \"c8\",\n      `-r=${conf.reporter}`,\n      \"--src\",\n      path.resolve(cwd, conf.source!),\n      ...c8Include,\n      ...c8Exclude,\n      // ...(conf[\"c8-config\"] ? [\"--config\", conf[\"c8-config\"]] : []),\n      conf[\"c8-all\"] && \"--all\",\n      conf[\"c8-skip-full\"] == true && \"--skip-full\",\n    ].filter(Boolean);\n  }\n\n  const ls = child_process.spawn(\n    \"npx\",\n    [\n      ...c8,\n      \"node\",\n      conf.out + \"/\" + conf.outfile,\n      ...(conf.argv as string[]),\n      \"--color\",\n    ].filter(Boolean),\n    {\n      stdio: \"inherit\",\n    }\n  );\n  lastChild = ls;\n\n  return ls;\n}\n", "/* c8 ignore start */\nimport fs from \"fs-extra\";\nimport { resolve } from \"path\";\nimport type { Conf } from \"./getConfig\";\nconst cwd = process.cwd();\n\nexport function copyPackage(conf: Conf) {\n  const pkgPath = resolve(cwd, \"package.json\");\n  if (!fs.existsSync(pkgPath)) {\n    return;\n  }\n  const pkg = require(pkgPath) || null;\n  delete pkg.devDependencies;\n  fs.writeJSONSync(resolve(conf.out!, \"package.json\"), pkg, { spaces: 2 });\n}\n", "/* c8 ignore start */\nimport cluster from \"cluster\";\nimport { resolve } from \"path\";\nimport type { Conf } from \"./getConfig\";\n// import c8 from \"c8\";\n// import { cover } from \"./cover\";\n\nfunction getMsg(msg: string) {\n  if (!/^bike::/.test(msg)) {\n    return;\n  }\n  return msg.replace(\"bike::\", \"\");\n}\n\nexport const workerFork = (conf: Conf) => {\n  for (const id in cluster.workers) {\n    (cluster as any).workers[id].process.kill();\n  }\n  const worker = cluster.fork();\n  worker.send(\"bike::\" + JSON.stringify(conf));\n  if (conf.afterFork) {\n    conf.afterFork(conf, worker);\n  }\n};\n\nexport const workerStart = () => {\n  if (cluster.isWorker) {\n    process.on(\"message\", (msg) => {\n      msg = getMsg(msg);\n      if (!msg) {\n        return;\n      }\n      const conf = JSON.parse(msg) as Conf;\n      // \u76D1\u542CPromise\u6CA1\u6709\u88AB\u6355\u83B7\u7684\u5931\u8D25\u51FD\u6570\n      process.on(\"unhandledRejection\", function (err, promise) {\n        console.error(\"[bike]\", err);\n      });\n      // console.log(\"bbbbbbbbbbbbbbbb\");\n      // cover(conf);\n      try {\n        if (/\\.mjs/.test(conf.outfile)) {\n          import(resolve(process.cwd(), conf.out + \"/\" + conf.outfile));\n        } else {\n          require(resolve(process.cwd(), conf.out + \"/\" + conf.outfile));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }\n  return cluster.isWorker;\n};\n", "/* c8 ignore start */\nimport readline from \"readline\";\nimport cluster from \"cluster\";\nimport chalk from \"chalk\";\nimport { resolve } from \"path\";\nimport type { Conf } from \"./getConfig\";\nimport fs from \"fs-extra\";\n\nconst cwd = process.cwd();\n\nexport const cacheIgnoreTestPath = resolve(\n  cwd,\n  \"node_modules\",\n  \".bike.test.ignore\"\n);\nexport const cacheTestPath = resolve(cwd, \"node_modules\", \".bike.test.json\");\n\nfunction parse() {\n  return fs.readJSONSync(cacheTestPath);\n}\n\nexport interface Cache {\n  focus: string[];\n  fails: string[];\n  all: string[];\n  doing: string[];\n}\n\nfunction saveFile(obj: Cache) {\n  fs.writeJSONSync(cacheTestPath, obj, { spaces: 2 });\n}\n\nexport const event = {\n  // \u7126\u8DDD\u67D0\u4E00\u4E2A\u6D4B\u8BD5\n  focus: (num: number) => {\n    const { all, doing } = parse();\n    if (!doing[num]) {\n      console.log(\n        chalk.gray(\n          `[bite] No have number ${\n            num + 1\n          } in last case, Please press key ${chalk.green(\"a\")} reload all.`\n        )\n      );\n      return;\n    }\n    saveFile({ focus: [doing[num]], fails: [], all, doing });\n  },\n  // \u5168\u90E8\u91CD\u65B0\u6D4B\u8BD5\n  all: () => {\n    const obj = parse();\n    obj.focus = [];\n    obj.fails = [];\n    saveFile(obj);\n  },\n};\n\nconst nums: { [key: string]: number } = {\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"0\": 10,\n};\n\nexport const keyboard = (conf: Conf, reload: Function) => {\n  if (cluster.isWorker) {\n    return;\n  }\n  readline.emitKeypressEvents(process.stdin);\n  if (process.stdin.isTTY) {\n    process.stdin.setRawMode(true);\n  }\n  process.stdin.on(\"keypress\", (_, key) => {\n    if (key.ctrl && key.name === \"c\") {\n      process.exit();\n    } else if (key.name === \"q\") {\n      process.exit();\n    } else if (key.name === \"a\") {\n      event.all();\n      reload();\n    } else if (nums[key.name]) {\n      event.focus(nums[key.name] - 1);\n      reload();\n    }\n  });\n};\n", "/* c8 ignore start */\nimport { fastify } from \"fastify\";\nimport fastifyWs from \"fastify-websocket\";\nimport fs from \"fs-extra\";\nimport { resolve } from \"path\";\nimport fastifyHttpProxy from \"fastify-http-proxy\";\nimport fastifyStatic from \"fastify-static\";\nimport fastifyCompress from \"fastify-compress\";\nimport type { Conf } from \"./getConfig\";\nimport { createHmac } from \"crypto\";\n\nconst cwd = process.cwd();\nlet reloadLog = () => {};\n\nconst wsList = new Set<WebSocket>();\nexport const devServe = (conf: Conf) => {\n  if (!conf.watch) {\n    return;\n  }\n  const htmlPath = resolve(conf[\"html-out\"]!, \"index.html\");\n\n  const { gzip, host, port, proxy } = conf;\n\n  const publicPrefix = conf[\"path-prefix\"];\n\n  const app = fastify();\n\n  if (proxy) {\n    proxy.forEach((p) => {\n      const [prefix, other] = (p as string).split(\"::\");\n      const opt = {\n        prefix,\n        upstream: other + prefix,\n        rewritePrefix: prefix,\n        http2: false,\n      };\n      app.register(fastifyHttpProxy, opt);\n    });\n  }\n\n  if (gzip) {\n    app.register(fastifyCompress, { global: true });\n  }\n\n  app.register(fastifyStatic, {\n    root: resolve(cwd, conf[\"html-out\"]!),\n    prefix: publicPrefix,\n  });\n  app.register(fastifyWs);\n\n  app.get(\"/\", function (req, rep) {\n    var html = fs.readFileSync(htmlPath, \"utf8\");\n    html = html.replace(\"</html>\", \"\");\n    html += `<script>${devHot}</script></html>`;\n    rep.code(200).header(\"Content-Type\", \"text/html; charset=utf-8\").send(html);\n  });\n\n  app.get(\"/devhot\", { websocket: true }, (connection) => {\n    connection.socket.on(\"message\", (msg: string) => {\n      if (msg === \"reload\") {\n        wsList.add(connection.socket);\n      }\n    });\n  });\n\n  app.listen(port, host, () => {\n    reloadLog = () => {\n      console.log(`Client dev server listen: http://${host}:${port}`);\n    };\n  });\n};\n\nexport const releaseBrowser = (conf: Conf) => {\n  const urlPrefix = conf[\"url-prefix\"];\n\n  fs.readdirSync(conf[\"html-out\"]!).forEach((file) => {\n    if (file !== \"index.css\" && /\\.(css)/.test(file)) {\n      fs.remove(resolve(conf[\"html-out\"]!, file));\n    }\n  });\n\n  let cssKey = \"\";\n  if (fs.existsSync(resolve(conf[\"html-out\"]!, \"index.css\"))) {\n    const indexCss = fs.readFileSync(resolve(conf[\"html-out\"]!, \"index.css\"));\n    cssKey = createHmac(\"sha256\", \"bike\")\n      .update(indexCss)\n      .digest(\"hex\")\n      .slice(5, 13);\n\n    fs.renameSync(\n      resolve(conf[\"html-out\"]!, \"index.css\"),\n      resolve(conf[\"html-out\"]!, `index-${cssKey}.css`)\n    );\n  }\n\n  const indexJS = fs.readFileSync(resolve(conf[\"html-out\"]!, \"index.js\"));\n  const key = createHmac(\"sha256\", \"bike\")\n    .update(indexJS)\n    .digest(\"hex\")\n    .slice(5, 13);\n\n  fs.renameSync(\n    resolve(conf[\"html-out\"]!, \"index.js\"),\n    resolve(conf[\"html-out\"]!, `index-${key}.js`)\n  );\n\n  const _html = replaceCss(conf, `index-${cssKey}.css`).replace(\n    \"/index.js?bike=1\",\n    `${urlPrefix}index-${key}.js`\n  );\n\n  fs.writeFileSync(resolve(conf[\"html-out\"]!, \"index.html\"), _html);\n};\n\nlet keep: any = null;\nexport const onBuilded = (conf: Conf) => {\n  if (keep) {\n    clearTimeout(keep);\n    keep = null;\n  }\n\n  replaceCss(conf, \"index.css\");\n  reloadLog();\n  keep = setTimeout(() => {\n    // bs.reload();\n    wsList.forEach((ws) => {\n      if (ws.readyState != 1) {\n        wsList.delete(ws);\n        return;\n      }\n      try {\n        ws.send(\"reload\");\n      } catch (err) {\n        console.error(err);\n        wsList.delete(ws);\n      }\n    });\n  }, 66);\n};\n\nfunction replaceCss(conf: Conf, name: string) {\n  const urlPrefix = conf[\"url-prefix\"];\n  const css = `<link rel=\"stylesheet\" href=\"${urlPrefix}${name}\" />\\n`;\n  // fs.readdirSync(conf[\"html-out\"]!).forEach((file) => {\n  //   if (/\\.(css)/.test(file)) {\n  //     css += `<link rel=\"stylesheet\" href=\"${urlPrefix}${file}\" />\\n`;\n  //   }\n  // });\n  const _html = conf[\"html-text\"].replace(\"</head>\", css + \"</head/>\");\n  fs.writeFileSync(resolve(conf[\"html-out\"]!, \"index.html\"), _html);\n  return _html;\n}\n\nconst devHot = `(function () {\n  window.devHot = true;\n  let ws = new WebSocket(\"ws://\" + location.host + \"/devhot\");\n  ws.onmessage = (env) => {\n    if (env.data === \"reload\") {\n      window.location.reload();\n    }\n  };\n  ws.onopen = () => {\n    if (ws.readyState > 0) {\n      console.log(\"[bike-hot] start\");\n      ws.send(\"reload\");\n    }\n  };\n  ws.onclose = () => {\n    console.log(\"[bike-hot] closed\");\n    reStart();\n  };\n  ws.onerror = () => {\n    console.log(\"[bike-hot] error\");\n    reStart();\n  };\n\n  let checker;\n  const reStart = () => {\n    console.log(\"[bike-hot] reconnect\");\n    if (checker) {\n      checker.close();\n    }\n    checker = null;\n    checker = new WebSocket(\"ws://\" + location.host + \"/devhot\");\n    checker.onopen = () => {\n      if (checker.readyState > 0) {\n        window.location.reload();\n      }\n    };\n    setTimeout(reStart, 2000);\n  };\n})();`;\n", "/* c8 ignore start */\nimport fs from \"fs-extra\";\nimport { resolve } from \"path\";\nimport type { Conf } from \"./getConfig\";\n\nexport const baseConfig = (conf: Partial<Conf>): Conf => {\n  if ((!conf._ || !conf._[0]) && !conf.html) {\n    console.log(\"Need input source dir, like: bike src\");\n    process.exit();\n  }\n  conf.source = conf._![0] as any;\n  if (conf.gzip === undefined) {\n    if (conf.watch || conf.start) {\n      conf.gzip = false;\n    } else {\n      conf.gzip = true;\n    }\n  }\n\n  if (conf.reporter === \"text\" || conf.reporter === \"html\") {\n    conf.test = true;\n    conf.spawn = true;\n  }\n\n  if (!conf.out) {\n    if (conf.test) {\n      conf.out = \"dist/test\";\n    } else {\n      conf.out = \"dist/server\";\n    }\n  }\n\n  if (conf.reporter === \"text\" && conf[\"c8-skip-full\"] == undefined) {\n    conf[\"c8-skip-full\"] = true;\n  }\n\n  if (!conf.entry) {\n    conf.entry = conf.source + \"/index.ts\";\n  }\n\n  if (conf.sourcemap === undefined) {\n    if (conf.watch || conf.start || conf.reporter) {\n      conf.sourcemap = true;\n    }\n  }\n\n  if (conf.target === undefined) {\n    if (conf.html) {\n      conf.target = \"es6\";\n    } else {\n      conf.target = \"esnext\";\n    }\n  }\n\n  if (conf.html) {\n    if (!conf[\"html-out\"]) {\n      conf[\"html-out\"] = \"dist/client\";\n    }\n    // \u89E3\u6790html\n    const cwd = process.cwd();\n    const htmlPath = resolve(cwd, conf.html);\n    const html = fs.readFileSync(htmlPath, \"utf8\");\n    const match = html.match(/src=\"(.*?).(ts|tsx)\"/);\n    if (match && match[0]) {\n      const subMatch = match[0].match(/src=\"(.*?)\"/);\n      if (subMatch && subMatch[1]) {\n        const url = subMatch[1];\n        const entryPath = resolve(htmlPath, url);\n        const list = entryPath.split(\"/\").filter(Boolean);\n        conf[\"html-source\"] = list[list.length - 2];\n        conf[\"html-entry\"] =\n          list[list.length - 2] + \"/\" + list[list.length - 1];\n      }\n    }\n    conf[\"html-text\"] = html.replace(/src=\"(.*?)\"/, 'src=\"/index.js?bike=1\"');\n  }\n\n  if (conf[\"log-config\"]) {\n    console.log(conf);\n    console.log(\" \");\n    console.log(\"Stop with only log config\");\n    process.exit();\n  }\n\n  return conf as any;\n};\n", "/* c8 ignore start */\nimport chokidar from \"chokidar\";\nimport fs from \"fs-extra\";\nimport os from \"os\";\n\nexport const watch = (uri: string, event: Function, timeout = 65) => {\n  let lock = false;\n  const fn = async () => {\n    if (lock) {\n      return;\n    }\n    lock = true;\n    await Promise.resolve(event());\n    setTimeout(() => {\n      lock = false;\n    }, timeout);\n  };\n\n  if (/(darwin|window)/.test(os.type().toLowerCase())) {\n    if (fs.statSync(uri).isDirectory()) {\n      fs.watch(uri, { recursive: true }, fn);\n    } else {\n      fs.watchFile(uri, fn);\n    }\n  } else {\n    chokidar.watch(uri).on(\"all\", fn);\n  }\n};\n", "import path from \"path\";\nimport fs from \"fs-extra\";\nimport { bike } from \"./bike\";\nimport type { Conf } from \"./getConfig\";\nimport { baseConfig } from \"./baseConfig\";\n\nconst cwd = process.cwd();\n\nexport const test = (config: Partial<Conf>) => {\n  if (!config.watch) {\n    config.start = true;\n  }\n  const conf = baseConfig(config);\n  conf.entry = path.resolve(conf.out!, \"bike.temp.ts\");\n\n  const files: string[] = [];\n  let waitGroup = 0;\n  const include = new RegExp(conf[\"test-include\"]);\n\n  function findTests(dir: string) {\n    waitGroup += 1;\n    fs.readdir(dir).then((list) => {\n      list.forEach((file) => {\n        waitGroup += 1;\n        const p = path.resolve(dir, file);\n        fs.stat(p).then((stat) => {\n          if (stat.isDirectory()) {\n            findTests(p);\n          } else if (include.test(file)) {\n            files.push(p);\n          }\n          waitGroup -= 1;\n        });\n      });\n      waitGroup -= 1;\n    });\n  }\n\n  if (!fs.existsSync(conf.out!)) {\n    fs.mkdirpSync(conf.out!);\n  }\n\n  async function createCode() {\n    conf.source.split(\",\").forEach((src) => {\n      findTests(path.resolve(cwd, src));\n    });\n    await new Promise((res) => {\n      const stop = setInterval(() => {\n        if (waitGroup == 0) {\n          clearInterval(stop);\n          res(void 0);\n        }\n      }, 20);\n    });\n    const code = files\n      .map((file) => {\n        file = path.relative(path.join(cwd, conf.out!), file);\n        console.log(file);\n        file = file.replace(/\\.(tsx|jsx)/g, \"\");\n        file = file.replace(/\\.(ts|js)/g, \"\");\n        file = file.replace(/\\\\/g, \"/\");\n        return `import(\"${file}\");`;\n      })\n      .join(\"\\n\");\n    await fs.writeFile(\n      conf.entry!,\n      `/* c8 ignore start */\n// THIS FILE IS AUTO GENERATE, DON'T EDIT.\n// tslint:disable\n/* eslint-disable */\n(global as any).fetch = require(\"node-fetch\");\nconst { JSDOM } = require(\"jsdom\");\nconst win = new JSDOM(\"\", { pretendToBeVisual: true }).window;\n(global as any).window = win;\n(global as any).document = win.document;\n(global as any).bikeConf = ${JSON.stringify(conf)};\n${code}\n`\n    );\n  }\n\n  let createdCoded = false;\n\n  async function before() {\n    if (!createdCoded || conf.rematch) {\n      await createCode();\n      createdCoded = true;\n    }\n  }\n\n  bike({ ...conf, before });\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAA6B;;;ACA7B,mBAAkB;AAClB,qBAAwB;AAEjB,mBAAmB,MAAgB;AACxC,QAAM,UAAU,0BAAM,4BAAQ,OAC3B,OAAO,QAAQ;AAAA,IACd,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,cAAc;AAAA,IACpB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,WAAW;AAAA,IACjB,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,QAAQ;AAAA,IACd,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,YAAY;AAAA,IAClB,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,OAAO;AAAA,IACb,MAAM;AAAA,IACN,aACE;AAAA,KAEH,OAAO,WAAW;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,SAAS;AAAA,IACf,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,SAAS;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,QAAQ;AAAA,IACd,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,YAAY;AAAA,IAClB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aACE;AAAA,KAEH,OAAO,aAAa;AAAA,IACnB,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,aAAa;AAAA,IACnB,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,QAAQ;AAAA,IACd,OAAO;AAAA,IACP,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,OAAO;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,SAAS;AAAA,IACf,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,SAAS;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,YAAY;AAAA,IAClB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,SAAS;AAAA,IACf,OAAO;AAAA,IACP,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,SAAS;AAAA,IACf,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,QAAQ;AAAA,IACd,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,QAAQ;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,QAAQ;AAAA,IACd,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,eAAe;AAAA,IACrB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,cAAc;AAAA,IACpB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,SAAS;AAAA,IACf,MAAM;AAAA,IACN,aACE;AAAA,KAEH,OAAO,YAAY;AAAA,IAClB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,gBAAgB;AAAA,IACtB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,WAAW;AAAA,IACjB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,cAAc;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,cAAc;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,UAAU;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,KAEd,OAAO,aAAa;AAAA,IACnB,MAAM;AAAA,IACN,aAAa;AAAA,KAEd,OAAO,gBAAgB;AAAA,IACtB,MAAM;AAAA,IACN,aAAa;AAAA;AAGjB,QAAM,OAAO,QAAQ;AAErB,OAAK,OAAO,KAAK,MAAM;AAEvB,SAAO;AAAA;AAGT,IAAM,QAAQ,UAAU;;;ACrNxB,qBAAoB;AACpB,mBAAwB;;;ACDxB,sBAAe;AACf,kBAAwB;AAGxB,IAAM,MAAM,QAAQ;AAEpB,kBAAkB;AAChB,QAAM,UAAU,yBAAQ,KAAK;AAC7B,MAAI,wBAAG,WAAW,UAAU;AAC1B,WAAO,QAAQ,YAAY;AAAA;AAE7B,SAAO;AAAA;AAGT,iBAAiB,KAAgC;AAC/C,MAAI,CAAC,KAAK;AACR,WAAO;AAAA;AAET,QAAM,OAAiB;AACvB,SAAO,KAAK,KAAK,QAAQ,CAAC,MAAM;AAC9B,UAAM,MAAM,IAAI;AAChB,QAAI,aAAa,KAAK,MAAM;AAC1B;AAAA;AAEF,QAAI,WAAW,KAAK,MAAM;AACxB;AAAA;AAEF,SAAK,KAAK;AAAA;AAEZ,SAAO;AAAA;AAGF,sBAAsB,MAAY;AACvC,MAAI,YAAY;AAAA,IAEd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGF,QAAM,eAAe,yBAAQ,KAAK;AAClC,QAAM,UAAU,QAAQ,yBAAQ,WAAW;AAC3C,cAAY,CAAC,GAAG,WAAW,GAAG,QAAQ,QAAQ;AAC9C,cAAY,CAAC,GAAG,WAAW,GAAG,QAAQ,QAAQ;AAE9C,QAAM,MAAM;AAEZ,MAAI,KAAK;AACP,QAAI,CAAC,KAAK,UAAU,IAAI,cAAc;AACpC,YAAM,SAAS,QAAQ,IAAI;AAO3B,kBAAY,CAAC,GAAG,WAAW,GAAG;AAAA;AAEhC,QAAI,IAAI,iBAAiB;AACvB,kBAAY,CAAC,GAAG,WAAW,GAAG,QAAQ,IAAI;AAAA;AAAA;AAG9C,MAAI,wBAAG,WAAW,eAAe;AAC/B,UAAM,WAAW,QAAQ;AACzB,QAAI,SAAS,SAAS;AACpB,kBAAY,CAAC,GAAG,WAAW,GAAG,SAAS;AAAA;AAAA;AAG3C,SAAO,MAAM,KAAK,IAAI,IAAI;AAAA;;;AC5G5B,2BAA0B;AAC1B,mBAAiB;AAGjB,IAAI,YAAiB;AACrB,IAAM,OAAM,QAAQ;AAEb,eAAe,MAAY;AAChC,MAAI,WAAW;AACb,cAAU,KAAK;AACf,gBAAY;AAAA;AAGd,MAAI,KAAY;AAEhB,QAAM,mBAAmB,CAAC,OAAO,QAAQ,QAAQ,OAAO,QAAQ;AAChE,QAAM,qBAAqB,iBACxB,IAAI,CAAC,cAAc,UAAU,MAAM,IACnC,KAAK;AAER,QAAM,aAAuB;AAC7B,MAAI,KAAK,eAAe,QAAQ;AAC9B,SAAK,cAAc,QAAQ,CAAC,MAAM;AAChC,iBAAW,KAAK;AAAA;AAAA;AAIpB,QAAM,YAAsB;AAC5B,aAAW,QAAQ,CAAC,MAAM;AACxB,cAAU,KAAK;AACf,cAAU,KAAK;AAAA;AAGjB,QAAM,aAAuB;AAAA,IAC3B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAEF,MAAI,KAAK,eAAe,QAAQ;AAC9B,SAAK,cAAc,QAAQ,CAAC,MAAM;AAChC,iBAAW,KAAK;AAAA;AAAA;AAGpB,QAAM,YAAsB;AAC5B,aAAW,QAAQ,CAAC,MAAM;AACxB,cAAU,KAAK;AACf,cAAU,KAAK;AAAA;AAGjB,MAAI,KAAK,UAAU;AACjB,SAAK;AAAA,MACH;AAAA,MACA,MAAM,KAAK;AAAA,MACX;AAAA,MACA,qBAAK,QAAQ,MAAK,KAAK;AAAA,MACvB,GAAG;AAAA,MACH,GAAG;AAAA,MAEH,KAAK,aAAa;AAAA,MAClB,KAAK,mBAAmB,QAAQ;AAAA,MAChC,OAAO;AAAA;AAGX,QAAM,KAAK,6BAAc,MACvB,OACA;AAAA,IACE,GAAG;AAAA,IACH;AAAA,IACA,KAAK,MAAM,MAAM,KAAK;AAAA,IACtB,GAAI,KAAK;AAAA,IACT;AAAA,IACA,OAAO,UACT;AAAA,IACE,OAAO;AAAA;AAGX,cAAY;AAEZ,SAAO;AAAA;;;ACxFT,uBAAe;AACf,mBAAwB;AAExB,IAAM,OAAM,QAAQ;AAEb,qBAAqB,MAAY;AACtC,QAAM,UAAU,0BAAQ,MAAK;AAC7B,MAAI,CAAC,yBAAG,WAAW,UAAU;AAC3B;AAAA;AAEF,QAAM,MAAM,QAAQ,YAAY;AAChC,SAAO,IAAI;AACX,2BAAG,cAAc,0BAAQ,KAAK,KAAM,iBAAiB,KAAK,EAAE,QAAQ;AAAA;;;ACZtE,qBAAoB;AACpB,mBAAwB;AAKxB,gBAAgB,KAAa;AAC3B,MAAI,CAAC,UAAU,KAAK,MAAM;AACxB;AAAA;AAEF,SAAO,IAAI,QAAQ,UAAU;AAAA;AAGxB,IAAM,aAAa,CAAC,SAAe;AACxC,aAAW,MAAM,uBAAQ,SAAS;AAChC,IAAC,uBAAgB,QAAQ,IAAI,QAAQ;AAAA;AAEvC,QAAM,SAAS,uBAAQ;AACvB,SAAO,KAAK,WAAW,KAAK,UAAU;AACtC,MAAI,KAAK,WAAW;AAClB,SAAK,UAAU,MAAM;AAAA;AAAA;AAIlB,IAAM,cAAc,MAAM;AAC/B,MAAI,uBAAQ,UAAU;AACpB,YAAQ,GAAG,WAAW,CAAC,QAAQ;AAC7B,YAAM,OAAO;AACb,UAAI,CAAC,KAAK;AACR;AAAA;AAEF,YAAM,OAAO,KAAK,MAAM;AAExB,cAAQ,GAAG,sBAAsB,SAAU,KAAK,SAAS;AACvD,gBAAQ,MAAM,UAAU;AAAA;AAI1B,UAAI;AACF,YAAI,QAAQ,KAAK,KAAK,UAAU;AAC9B,iBAAO,0BAAQ,QAAQ,OAAO,KAAK,MAAM,MAAM,KAAK;AAAA,eAC/C;AACL,kBAAQ,0BAAQ,QAAQ,OAAO,KAAK,MAAM,MAAM,KAAK;AAAA;AAAA,eAEhD,OAAP;AACA,gBAAQ,MAAM;AAAA;AAAA;AAAA;AAIpB,SAAO,uBAAQ;AAAA;;;ACjDjB,sBAAqB;AACrB,sBAAoB;AACpB,mBAAkB;AAClB,mBAAwB;AAExB,uBAAe;AAEf,IAAM,OAAM,QAAQ;AAEb,IAAM,sBAAsB,0BACjC,MACA,gBACA;AAEK,IAAM,gBAAgB,0BAAQ,MAAK,gBAAgB;AAE1D,iBAAiB;AACf,SAAO,yBAAG,aAAa;AAAA;AAUzB,kBAAkB,KAAY;AAC5B,2BAAG,cAAc,eAAe,KAAK,EAAE,QAAQ;AAAA;AAG1C,IAAM,QAAQ;AAAA,EAEnB,OAAO,CAAC,QAAgB;AACtB,UAAM,EAAE,KAAK,UAAU;AACvB,QAAI,CAAC,MAAM,MAAM;AACf,cAAQ,IACN,qBAAM,KACJ,yBACE,MAAM,oCAC2B,qBAAM,MAAM;AAGnD;AAAA;AAEF,aAAS,EAAE,OAAO,CAAC,MAAM,OAAO,OAAO,IAAI,KAAK;AAAA;AAAA,EAGlD,KAAK,MAAM;AACT,UAAM,MAAM;AACZ,QAAI,QAAQ;AACZ,QAAI,QAAQ;AACZ,aAAS;AAAA;AAAA;AAIb,IAAM,OAAkC;AAAA,EACtC,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA;AAGA,IAAM,WAAW,CAAC,MAAY,WAAqB;AACxD,MAAI,wBAAQ,UAAU;AACpB;AAAA;AAEF,0BAAS,mBAAmB,QAAQ;AACpC,MAAI,QAAQ,MAAM,OAAO;AACvB,YAAQ,MAAM,WAAW;AAAA;AAE3B,UAAQ,MAAM,GAAG,YAAY,CAAC,GAAG,QAAQ;AACvC,QAAI,IAAI,QAAQ,IAAI,SAAS,KAAK;AAChC,cAAQ;AAAA,eACC,IAAI,SAAS,KAAK;AAC3B,cAAQ;AAAA,eACC,IAAI,SAAS,KAAK;AAC3B,YAAM;AACN;AAAA,eACS,KAAK,IAAI,OAAO;AACzB,YAAM,MAAM,KAAK,IAAI,QAAQ;AAC7B;AAAA;AAAA;AAAA;;;ACvFN,qBAAwB;AACxB,+BAAsB;AACtB,uBAAe;AACf,mBAAwB;AACxB,gCAA6B;AAC7B,4BAA0B;AAC1B,8BAA4B;AAE5B,oBAA2B;AAE3B,IAAM,OAAM,QAAQ;AACpB,IAAI,YAAY,MAAM;AAAA;AAEtB,IAAM,SAAS,IAAI;AACZ,IAAM,WAAW,CAAC,SAAe;AACtC,MAAI,CAAC,KAAK,OAAO;AACf;AAAA;AAEF,QAAM,WAAW,0BAAQ,KAAK,aAAc;AAE5C,QAAM,EAAE,MAAM,MAAM,MAAM,UAAU;AAEpC,QAAM,eAAe,KAAK;AAE1B,QAAM,MAAM;AAEZ,MAAI,OAAO;AACT,UAAM,QAAQ,CAAC,MAAM;AACnB,YAAM,CAAC,QAAQ,SAAU,EAAa,MAAM;AAC5C,YAAM,MAAM;AAAA,QACV;AAAA,QACA,UAAU,QAAQ;AAAA,QAClB,eAAe;AAAA,QACf,OAAO;AAAA;AAET,UAAI,SAAS,mCAAkB;AAAA;AAAA;AAInC,MAAI,MAAM;AACR,QAAI,SAAS,iCAAiB,EAAE,QAAQ;AAAA;AAG1C,MAAI,SAAS,+BAAe;AAAA,IAC1B,MAAM,0BAAQ,MAAK,KAAK;AAAA,IACxB,QAAQ;AAAA;AAEV,MAAI,SAAS;AAEb,MAAI,IAAI,KAAK,SAAU,KAAK,KAAK;AAC/B,QAAI,OAAO,yBAAG,aAAa,UAAU;AACrC,WAAO,KAAK,QAAQ,WAAW;AAC/B,YAAQ,WAAW;AACnB,QAAI,KAAK,KAAK,OAAO,gBAAgB,4BAA4B,KAAK;AAAA;AAGxE,MAAI,IAAI,WAAW,EAAE,WAAW,QAAQ,CAAC,eAAe;AACtD,eAAW,OAAO,GAAG,WAAW,CAAC,QAAgB;AAC/C,UAAI,QAAQ,UAAU;AACpB,eAAO,IAAI,WAAW;AAAA;AAAA;AAAA;AAK5B,MAAI,OAAO,MAAM,MAAM,MAAM;AAC3B,gBAAY,MAAM;AAChB,cAAQ,IAAI,oCAAoC,QAAQ;AAAA;AAAA;AAAA;AAKvD,IAAM,iBAAiB,CAAC,SAAe;AAC5C,QAAM,YAAY,KAAK;AAEvB,2BAAG,YAAY,KAAK,aAAc,QAAQ,CAAC,SAAS;AAClD,QAAI,SAAS,eAAe,UAAU,KAAK,OAAO;AAChD,+BAAG,OAAO,0BAAQ,KAAK,aAAc;AAAA;AAAA;AAIzC,MAAI,SAAS;AACb,MAAI,yBAAG,WAAW,0BAAQ,KAAK,aAAc,eAAe;AAC1D,UAAM,WAAW,yBAAG,aAAa,0BAAQ,KAAK,aAAc;AAC5D,aAAS,8BAAW,UAAU,QAC3B,OAAO,UACP,OAAO,OACP,MAAM,GAAG;AAEZ,6BAAG,WACD,0BAAQ,KAAK,aAAc,cAC3B,0BAAQ,KAAK,aAAc,SAAS;AAAA;AAIxC,QAAM,UAAU,yBAAG,aAAa,0BAAQ,KAAK,aAAc;AAC3D,QAAM,MAAM,8BAAW,UAAU,QAC9B,OAAO,SACP,OAAO,OACP,MAAM,GAAG;AAEZ,2BAAG,WACD,0BAAQ,KAAK,aAAc,aAC3B,0BAAQ,KAAK,aAAc,SAAS;AAGtC,QAAM,QAAQ,WAAW,MAAM,SAAS,cAAc,QACpD,oBACA,GAAG,kBAAkB;AAGvB,2BAAG,cAAc,0BAAQ,KAAK,aAAc,eAAe;AAAA;AAG7D,IAAI,OAAY;AACT,IAAM,YAAY,CAAC,SAAe;AACvC,MAAI,MAAM;AACR,iBAAa;AACb,WAAO;AAAA;AAGT,aAAW,MAAM;AACjB;AACA,SAAO,WAAW,MAAM;AAEtB,WAAO,QAAQ,CAAC,OAAO;AACrB,UAAI,GAAG,cAAc,GAAG;AACtB,eAAO,OAAO;AACd;AAAA;AAEF,UAAI;AACF,WAAG,KAAK;AAAA,eACD,KAAP;AACA,gBAAQ,MAAM;AACd,eAAO,OAAO;AAAA;AAAA;AAAA,KAGjB;AAAA;AAGL,oBAAoB,MAAY,MAAc;AAC5C,QAAM,YAAY,KAAK;AACvB,QAAM,MAAM,gCAAgC,YAAY;AAAA;AAMxD,QAAM,QAAQ,KAAK,aAAa,QAAQ,WAAW,MAAM;AACzD,2BAAG,cAAc,0BAAQ,KAAK,aAAc,eAAe;AAC3D,SAAO;AAAA;AAGT,IAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AN/If,uBAAe;;;AOTf,uBAAe;AACf,mBAAwB;AAGjB,IAAM,aAAa,CAAC,SAA8B;AACvD,MAAK,EAAC,KAAK,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,MAAM;AACzC,YAAQ,IAAI;AACZ,YAAQ;AAAA;AAEV,OAAK,SAAS,KAAK,EAAG;AACtB,MAAI,KAAK,SAAS,QAAW;AAC3B,QAAI,KAAK,SAAS,KAAK,OAAO;AAC5B,WAAK,OAAO;AAAA,WACP;AACL,WAAK,OAAO;AAAA;AAAA;AAIhB,MAAI,KAAK,aAAa,UAAU,KAAK,aAAa,QAAQ;AACxD,SAAK,OAAO;AACZ,SAAK,QAAQ;AAAA;AAGf,MAAI,CAAC,KAAK,KAAK;AACb,QAAI,KAAK,MAAM;AACb,WAAK,MAAM;AAAA,WACN;AACL,WAAK,MAAM;AAAA;AAAA;AAIf,MAAI,KAAK,aAAa,UAAU,KAAK,mBAAmB,QAAW;AACjE,SAAK,kBAAkB;AAAA;AAGzB,MAAI,CAAC,KAAK,OAAO;AACf,SAAK,QAAQ,KAAK,SAAS;AAAA;AAG7B,MAAI,KAAK,cAAc,QAAW;AAChC,QAAI,KAAK,SAAS,KAAK,SAAS,KAAK,UAAU;AAC7C,WAAK,YAAY;AAAA;AAAA;AAIrB,MAAI,KAAK,WAAW,QAAW;AAC7B,QAAI,KAAK,MAAM;AACb,WAAK,SAAS;AAAA,WACT;AACL,WAAK,SAAS;AAAA;AAAA;AAIlB,MAAI,KAAK,MAAM;AACb,QAAI,CAAC,KAAK,aAAa;AACrB,WAAK,cAAc;AAAA;AAGrB,UAAM,OAAM,QAAQ;AACpB,UAAM,WAAW,0BAAQ,MAAK,KAAK;AACnC,UAAM,OAAO,yBAAG,aAAa,UAAU;AACvC,UAAM,QAAQ,KAAK,MAAM;AACzB,QAAI,SAAS,MAAM,IAAI;AACrB,YAAM,WAAW,MAAM,GAAG,MAAM;AAChC,UAAI,YAAY,SAAS,IAAI;AAC3B,cAAM,MAAM,SAAS;AACrB,cAAM,YAAY,0BAAQ,UAAU;AACpC,cAAM,OAAO,UAAU,MAAM,KAAK,OAAO;AACzC,aAAK,iBAAiB,KAAK,KAAK,SAAS;AACzC,aAAK,gBACH,KAAK,KAAK,SAAS,KAAK,MAAM,KAAK,KAAK,SAAS;AAAA;AAAA;AAGvD,SAAK,eAAe,KAAK,QAAQ,eAAe;AAAA;AAGlD,MAAI,KAAK,eAAe;AACtB,YAAQ,IAAI;AACZ,YAAQ,IAAI;AACZ,YAAQ,IAAI;AACZ,YAAQ;AAAA;AAGV,SAAO;AAAA;;;ACnFT,sBAAqB;AACrB,uBAAe;AACf,gBAAe;AAER,IAAM,QAAQ,CAAC,KAAa,QAAiB,UAAU,OAAO;AACnE,MAAI,OAAO;AACX,QAAM,KAAK,YAAY;AACrB,QAAI,MAAM;AACR;AAAA;AAEF,WAAO;AACP,UAAM,QAAQ,QAAQ;AACtB,eAAW,MAAM;AACf,aAAO;AAAA,OACN;AAAA;AAGL,MAAI,kBAAkB,KAAK,kBAAG,OAAO,gBAAgB;AACnD,QAAI,yBAAG,SAAS,KAAK,eAAe;AAClC,+BAAG,MAAM,KAAK,EAAE,WAAW,QAAQ;AAAA,WAC9B;AACL,+BAAG,UAAU,KAAK;AAAA;AAAA,SAEf;AACL,4BAAS,MAAM,KAAK,GAAG,OAAO;AAAA;AAAA;;;ARXlC,IAAM,OAAM,QAAQ;AAEpB,oBAA2B,QAAuB;AAChD,QAAM,OAAO,WAAW;AAExB,MAAI,eAAe;AACjB;AAAA;AAGF,MAAI,KAAK,MAAM;AACb,6BAAG,WAAW,0BAAQ,MAAK,KAAK;AAChC,QAAI,CAAC,yBAAG,WAAW,0BAAQ,MAAK,KAAK,eAAgB;AACnD,+BAAG,WAAW,0BAAQ,MAAK,KAAK;AAAA;AAElC,UAAM,aAAa,0BAAQ,MAAK,KAAK;AACrC,QAAI,yBAAG,WAAW,aAAa;AAC7B,+BAAG,SAAS,YAAY,0BAAQ,MAAK,KAAK;AAAA;AAE5C,UAAM,WAAW,0BAAQ,MAAK,KAAK,aAAc;AACjD,6BAAG,cAAc,UAAU,KAAK;AAChC,QAAI,KAAK,OAAO;AACd,eAAS;AAAA;AAAA;AAIb,MAAI,KAAK,QAAQ;AACf,6BAAG,WAAW,0BAAQ,MAAK,KAAK;AAChC,QAAI,CAAC,yBAAG,WAAW,0BAAQ,MAAK,KAAK,OAAQ;AAC3C,+BAAG,WAAW,0BAAQ,MAAK,KAAK;AAAA;AAGlC,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,YAAY,IAAI,IACpB,CAAC,QAAQ,GAAK,KAAK,QAAqB,IAAK,OAAO;AAEtD,gBAAU,QAAQ,CAAC,SAAS;AAC1B,cAAM,IAAI,0BAAQ,MAAK;AACvB,YAAI,yBAAG,WAAW,IAAI;AACpB,mCAAG,aAAa,GAAG,0BAAQ,MAAK,KAAK,KAAM;AAAA;AAAA;AAG/C,YAAM,aAAa,0BAAQ,MAAK,KAAK;AACrC,UAAI,yBAAG,WAAW,aAAa;AAC7B,iCAAG,SAAS,YAAY,0BAAQ,MAAK,KAAK;AAAA;AAE5C,kBAAY;AAAA;AAAA;AAIhB,MAAI,WAAW;AACf,MAAI,KAAK,QAAQ;AACf,QAAI,KAAK,UAAU;AACjB,iBAAW,CAAC,GAAG,aAAa,OAAO,GAAG,KAAK;AAAA,WACtC;AACL,iBAAW,aAAa;AAAA;AAAA;AAI5B,MAAI;AACJ,MAAI;AAEJ,MAAI,KAAK,QAAQ;AACf,QAAI,KAAK,SAAS;AAChB,uBAAiB;AAAA,QACf,aAAa,CAAC,0BAAQ,MAAK,KAAK;AAAA,QAChC,QAAQ;AAAA,QACR,QAAQ,CAAC;AAAA,QAET,QAAQ,CAAC,KAAK;AAAA,QACd,UAAU;AAAA,QACV,WAAW,KAAK;AAAA,QAChB,QAAQ,KAAK,UAAU;AAAA,QACvB,QAAQ,KAAK;AAAA,QACb,WAAW,CAAC,KAAK;AAAA;AAAA,WAEd;AACL,uBAAiB;AAAA,QACf,aAAa,CAAC,0BAAQ,MAAK,KAAK;AAAA,QAChC,QAAQ,KAAK;AAAA,QACb,QAAQ,KAAK,UAAU,CAAC,UAAU;AAAA,QAClC,QAAQ,KAAK;AAAA,QACb,QAAQ,KAAK;AAAA,QACb,UAAU,KAAK;AAAA,QACf,WAAW,KAAK;AAAA,QAChB,QAAQ,KAAK;AAAA,QACb;AAAA,QACA,QAAQ,KAAK,YAAY,KAAK,MAAM;AAAA,QACpC,SAAS,KAAK,YAAY,SAAY,KAAK,MAAM,MAAM,KAAK;AAAA,QAC5D,WAAW,KAAK;AAAA;AAAA;AAAA;AAKtB,MAAI,KAAK,MAAM;AACb,yBAAqB;AAAA,MACnB,aAAa,CAAC,0BAAQ,MAAK,KAAK;AAAA,MAChC,QAAQ;AAAA,MACR,QAAQ,CAAC;AAAA,MAET,QAAQ,CAAC,KAAK;AAAA,MACd,UAAU;AAAA,MACV,WAAW;AAAA,MACX,QAAQ,KAAK,UAAU;AAAA,MACvB,QAAQ,KAAK;AAAA,MACb,WAAW,CAAC,KAAK;AAAA;AAAA;AAIrB,QAAM,QAAQ,YAAY;AAIxB,QAAI,KAAK,MAAM;AACb,cAAQ;AAAA;AAEV,QAAI,KAAK,QAAQ;AACf,YAAM,QAAQ,QAAQ,KAAK,OAAO;AAAA;AAEpC,QAAI,KAAK,QAAQ;AACf,YAAM,uBAAQ,MAAM;AAAA;AAGtB,QAAI,KAAK,OAAO;AACd,WAAK,MAAM;AAAA;AAGb,QAAI,CAAC,KAAK,SAAS,CAAC,KAAK,OAAO;AAC9B,cAAQ,IAAI;AAAA;AAAA;AAIhB,QAAM,YAAY,YAAY;AAC5B,UAAM,uBAAQ,MAAM;AAEpB,QAAI,CAAC,KAAK,SAAS,CAAC,KAAK,OAAO;AAC9B,qBAAe;AACf,cAAQ,IAAI;AAAA;AAAA;AAIhB,QAAM,SAAS,MAAM;AACnB,QAAI,KAAK,QAAQ;AACf,UAAI,KAAK,OAAO;AACd,eAAO,MAAM;AAAA;AAEf,iBAAW;AAAA;AAAA;AAIf,QAAM,aAAa,MAAM;AACvB,QAAI,KAAK,MAAM;AACb,gBAAU;AAAA;AAAA;AAId,MAAI;AACF,QAAI,KAAK,QAAQ;AACf,YAAM;AAAA;AAER,QAAI,KAAK,MAAM;AACb,YAAM;AAAA;AAAA,WAED,KAAP;AACA,UAAM;AAAA;AAGR,MAAI,KAAK,OAAO;AACd;AACA;AAAA,aACS,KAAK,OAAO;AACrB;AACA;AACA,UAAM,UAAU,YAAY;AAC1B,YAAM;AACN;AAAA;AAEF,QAAI,KAAK,QAAQ;AACf,WAAK,OAAO,MAAM,KAAK,QAAQ,CAAC,QAAQ;AACtC,cAAM,KAAK;AAAA;AAAA;AAIf,QAAI,KAAK,MAAM;AACb,YAAM,KAAK,gBAAgB,YAAY;AACrC,cAAM;AACN;AAAA;AAAA;AAGJ,QAAI,KAAK,MAAM;AACb,eAAS,MAAM;AAAA;AAAA;AAAA;;;AS3MrB,mBAAiB;AACjB,uBAAe;AAKf,IAAM,OAAM,QAAQ;AAEb,IAAM,OAAO,CAAC,WAA0B;AAC7C,MAAI,CAAC,OAAO,OAAO;AACjB,WAAO,QAAQ;AAAA;AAEjB,QAAM,OAAO,WAAW;AACxB,OAAK,QAAQ,qBAAK,QAAQ,KAAK,KAAM;AAErC,QAAM,QAAkB;AACxB,MAAI,YAAY;AAChB,QAAM,UAAU,IAAI,OAAO,KAAK;AAEhC,qBAAmB,KAAa;AAC9B,iBAAa;AACb,6BAAG,QAAQ,KAAK,KAAK,CAAC,SAAS;AAC7B,WAAK,QAAQ,CAAC,SAAS;AACrB,qBAAa;AACb,cAAM,IAAI,qBAAK,QAAQ,KAAK;AAC5B,iCAAG,KAAK,GAAG,KAAK,CAAC,SAAS;AACxB,cAAI,KAAK,eAAe;AACtB,sBAAU;AAAA,qBACD,QAAQ,KAAK,OAAO;AAC7B,kBAAM,KAAK;AAAA;AAEb,uBAAa;AAAA;AAAA;AAGjB,mBAAa;AAAA;AAAA;AAIjB,MAAI,CAAC,yBAAG,WAAW,KAAK,MAAO;AAC7B,6BAAG,WAAW,KAAK;AAAA;AAGrB,8BAA4B;AAC1B,SAAK,OAAO,MAAM,KAAK,QAAQ,CAAC,QAAQ;AACtC,gBAAU,qBAAK,QAAQ,MAAK;AAAA;AAE9B,UAAM,IAAI,QAAQ,CAAC,QAAQ;AACzB,YAAM,OAAO,YAAY,MAAM;AAC7B,YAAI,aAAa,GAAG;AAClB,wBAAc;AACd,cAAI;AAAA;AAAA,SAEL;AAAA;AAEL,UAAM,OAAO,MACV,IAAI,CAAC,SAAS;AACb,aAAO,qBAAK,SAAS,qBAAK,KAAK,MAAK,KAAK,MAAO;AAChD,cAAQ,IAAI;AACZ,aAAO,KAAK,QAAQ,gBAAgB;AACpC,aAAO,KAAK,QAAQ,cAAc;AAClC,aAAO,KAAK,QAAQ,OAAO;AAC3B,aAAO,WAAW;AAAA,OAEnB,KAAK;AACR,UAAM,yBAAG,UACP,KAAK,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BASuB,KAAK,UAAU;AAAA,EAC1C;AAAA;AAAA;AAKA,MAAI,eAAe;AAEnB,0BAAwB;AACtB,QAAI,CAAC,gBAAgB,KAAK,SAAS;AACjC,YAAM;AACN,qBAAe;AAAA;AAAA;AAInB,OAAK,KAAK,MAAM;AAAA;;;AXpFlB,kCAAiB;",
  "names": []
}
